name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up SSH to connect to the Droplet
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # Step 3: Add Droplet to known_hosts
    - name: Add Droplet to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

    # Step 4: Ensure the target directory exists
    - name: Create target directory
      run: |
        ssh root@${{ secrets.DROPLET_IP }} "mkdir -p /home/root/app"

    # Step 5: Copy files to the Droplet
    - name: Copy files to server
      run: |
        scp -r ./* root@${{ secrets.DROPLET_IP }}:/home/root/app

    # Step 5.1: Debug secrets safely
    - name: Debug secrets
      run: |
        echo "${{ secrets.FRONTEND_ENV }}" | tr -d '\n' | sed 's/./*/g'
        echo "${{ secrets.API_ENV }}" | tr -d '\n' | sed 's/./*/g'
        echo "${{ secrets.STORAGE_ENV }}" | tr -d '\n' | sed 's/./*/g'

    # Step 5.2: Create .env files on server
    - name: Create .env files on server
      run: |
        ssh root@${{ secrets.DROPLET_IP }} "printf '%s\n' '${{ secrets.FRONTEND_ENV }}' > /home/root/app/flashback-front-end/.env"
        ssh root@${{ secrets.DROPLET_IP }} "printf '%s\n' '${{ secrets.API_ENV }}' > /home/root/app/flashback-api/.env"
        ssh root@${{ secrets.DROPLET_IP }} "printf '%s\n' '${{ secrets.STORAGE_ENV }}' > /home/root/app/storage-service/.env"

    # Step 6: SSH into the Droplet and deploy
    - name: Deploy on server
      run: |
        ssh root@${{ secrets.DROPLET_IP }} "cd /home/root/app && docker compose down && docker compose up -d --build"